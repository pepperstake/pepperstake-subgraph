type PepperStakeContract @entity {
  id: ID!
  address: Bytes!
  creator: Bytes!
  supervisors: [Bytes!]!
  stakeAmount: BigInt!
  unreturnedStakeBeneficiaries: [Bytes!]!
  returnWindowDays: BigInt!
  maxParticipants: BigInt!
  shouldParticipantsShareUnreturnedStake: Boolean!
  shouldUseSupervisorInactionGuard: Boolean!
  metadataURI: String!

  stakeEvents: [StakeEvent!]! @derivedFrom(field: "pepperStakeContract")
  sponsorEvents: [SponsorEvent!]! @derivedFrom(field: "pepperStakeContract")
  returnStakeEvents: [ReturnStakeEvent!]! @derivedFrom(field: "pepperStakeContract")
  distributeUnreturnedStakeEvents: [DistributeUnreturnedStakeEvent!]! @derivedFrom(field: "pepperStakeContract")
  distributeSponsorContributionEvents: [DistributeSponsorContributionEvent!]! @derivedFrom(field: "pepperStakeContract")
}

type StakeEvent @entity {
  id: ID!
  pepperStakeContract: PepperStakeContract!
  timestamp: Int!
  txHash: Bytes!

  participant: Bytes!
  amount: BigInt!
}

type SponsorEvent @entity {
  id: ID!
  pepperStakeContract: PepperStakeContract!
  timestamp: Int!
  txHash: Bytes!

  participant: Bytes!
  amount: BigInt!
}

type ReturnStakeEvent @entity {
  id: ID!
  pepperStakeContract: PepperStakeContract!
  timestamp: Int!
  txHash: Bytes!

  supervisor: Bytes!
  completingParticipants: [Bytes!]!
  amount: BigInt!
}

type DistributeUnreturnedStakeEvent @entity {
  id: ID!
  pepperStakeContract: PepperStakeContract!
  timestamp: Int!
  txHash: Bytes!

  caller: Bytes!
  beneficiaries: [Bytes!]!
  totalUnreturnedStake: BigInt!
  sharePerBeneficiary: BigInt!
}

type DistributeSponsorContributionEvent @entity {
  id: ID!
  pepperStakeContract: PepperStakeContract!
  timestamp: Int!
  txHash: Bytes!

  caller: Bytes!
  beneficiaries: [Bytes!]!
  totalSponsorContribution: BigInt!
  sharePerBeneficiary: BigInt!
}

type DeployPepperStakeEvent @entity {
  id: ID!
  timestamp: Int!
  txHash: Bytes!

  pepperStakeContract: PepperStakeContract!
}
