type PepperStakeContract @entity {
  id: ID!
  address: Bytes!
  creator: Bytes!
  projectId: Int!

  supervisors: [Bytes!]!
  participantAllowList: [Bytes!]!
  unreturnedStakeBeneficiaries: [Bytes!]!
  oracleDelegateAddresses: [Bytes!]!
  stakingTiers: [BigInt!]!

  completionWindowSeconds: BigInt!
  maxParticipants: BigInt!
  shouldUseParticipantAllowList: Boolean!
  shouldParticipantsShareUnreturnedStake: Boolean!
  shouldUseSupervisorInactionGuard: Boolean!

  creatorFeePercentage: BigDecimal!
  creatorFeeBeneficiary: Bytes!
  supervisorTipPercentage: BigDecimal!
  protocolFeePercentage: BigDecimal!
  protocolFeeBeneficiary: Bytes!

  metadataURI: String!

  stakeEvents: [StakeEvent!]! @derivedFrom(field: "pepperStakeContract")
  sponsorEvents: [SponsorEvent!]! @derivedFrom(field: "pepperStakeContract")
  approveForParticipantsEvents: [ApproveForParticipantsEvent!]! @derivedFrom(field: "pepperStakeContract")
  returnStakeEvents: [ReturnStakeEvent!]! @derivedFrom(field: "pepperStakeContract")
  distributeUnreturnedStakeEvents: [DistributeUnreturnedStakeEvent!]! @derivedFrom(field: "pepperStakeContract")
  distributeSponsorContributionEvents: [DistributeSponsorContributionEvent!]! @derivedFrom(field: "pepperStakeContract")
  distributeFeesEvents: [DistributeFeesEvent!]! @derivedFrom(field: "pepperStakeContract")
  postCompletionWindowDistributionEvents: [PostCompletionWindowDistributionEvent!]! @derivedFrom(field: "pepperStakeContract")
}

type StakeEvent @entity(immutable: true) {
  id: Bytes!
  pepperStakeContract: PepperStakeContract!
  timestamp: BigInt!
  txHash: Bytes!

  participant: Bytes!
  amount: BigInt!
}

type SponsorEvent @entity(immutable: true) {
  id: Bytes!
  pepperStakeContract: PepperStakeContract!
  timestamp: BigInt!
  txHash: Bytes!

  sponsor: Bytes!
  amount: BigInt!
}

type ApproveForParticipantsEvent @entity(immutable: true) {
  id: Bytes!
  pepperStakeContract: PepperStakeContract!
  timestamp: BigInt!
  txHash: Bytes!

  supervisor: Bytes!
  participants: [Bytes!]!
}

type ReturnStakeEvent @entity(immutable: true) {
  id: Bytes!
  pepperStakeContract: PepperStakeContract!
  timestamp: BigInt!
  txHash: Bytes!

  participant: Bytes!
  stakeAmount: BigInt!
  fee: BigInt!
  returnAmount: BigInt!
}

type DistributeSponsorContributionEvent @entity(immutable: true) {
  id: Bytes!
  pepperStakeContract: PepperStakeContract!
  timestamp: BigInt!
  txHash: Bytes!

  caller: Bytes!
  beneficiaries: [Bytes!]!
  amount: BigInt!
  beneficiaryShare: BigInt!
}

type DistributeFeesEvent @entity(immutable: true) {
  id: Bytes!
  pepperStakeContract: PepperStakeContract!
  timestamp: BigInt!
  txHash: Bytes!

  caller: Bytes!
  protocolFeeAmount: BigInt!
  protocolFeeBeneficiary: Bytes!
  creatorFeeAmount: BigInt!
  creatorFeeBeneficiary: Bytes!
  supervisorTipAmount: BigInt!
  supervisors: [Bytes!]!
  supervisorShare: BigInt!
}

type DistributeUnreturnedStakeEvent @entity(immutable: true) {
  id: Bytes!
  pepperStakeContract: PepperStakeContract!
  timestamp: BigInt!
  txHash: Bytes!

  caller: Bytes!
  beneficiaries: [Bytes!]!
  amount: BigInt!
  beneficiaryShare: BigInt!
}

type PostCompletionWindowDistributionEvent @entity(immutable: true) {
  id: Bytes!
  pepperStakeContract: PepperStakeContract!
  timestamp: BigInt!
  txHash: Bytes!

  caller: Bytes!
}

type DeployPepperStakeEvent @entity(immutable: true) {
  id: Bytes!
  timestamp: BigInt!
  txHash: Bytes!

  pepperStakeContract: PepperStakeContract!
}
