specVersion: 0.0.1
schema:
  file: ./schema.graphql
templates:
    - name: PepperStake
      kind: ethereum/contract
      network: {{network}}
      source:
        abi: PepperStake
      mapping:
        kind: ethereum/events
        apiVersion: 0.0.5
        language: wasm/assemblyscript
        file: ./src/mappings/pepperStake.ts
        entities:
          - PepperStake
          - StakeEvent
          - SponsorEvent
          - ReturnStakeEvent
          - DistributeUnreturnedStakeEvent
          - DistributeSponsorContributionEvent
        abis:
          - name: PepperStake
            file: ./src/abis/PepperStake.json
        eventHandlers:
          - event: Stake(indexed address,uint256)
            handler: handleStake
          - event: Sponsor(indexed address,uint256)
            handler: handleSponsor
          - event: ReturnStake(indexed address,address[],uint256)
            handler: handleReturnStake
          - event: DistributeUnreturnedStake(indexed address,address[],uint256,uint256)
            handler: handleDistributeUnreturnedStake
          - event: DistributeSponsorContribution(indexed address,address[],uint256,uint256)
            handler: handleDistributeSponsorContribution

dataSources:
  - kind: ethereum/contract
    name: PepperStakeDeployer
    network: {{network}}
    source:
      address: '{{address_pepperStakeDeployer}}'
      abi: PepperStakeDeployer
      startBlock: {{startBlock_pepperStakeDeployer}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - DeployPepperStakeEvent
      abis:
        - name: PepperStakeDeployer
          file: ./src/abis/PepperStakeDeployer.json
      eventHandlers:
        - event: DeployPepperStake(indexed address,address[],uint256,address[],uint256,uint256,bool,bool,string)
          handler: handleDeployPepperStake
      file: ./src/mappings/pepperStakeDeployer.ts
